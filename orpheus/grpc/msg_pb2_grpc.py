# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import msg_pb2 as msg__pb2


class OrpheusStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.init = channel.unary_unary(
        '/Orpheus/init',
        request_serializer=msg__pb2.InitRequest.SerializeToString,
        response_deserializer=msg__pb2.BasicReply.FromString,
        )
    self.list = channel.unary_unary(
        '/Orpheus/list',
        request_serializer=msg__pb2.Empty.SerializeToString,
        response_deserializer=msg__pb2.BasicReply.FromString,
        )
    self.drop = channel.unary_unary(
        '/Orpheus/drop',
        request_serializer=msg__pb2.DropRequest.SerializeToString,
        response_deserializer=msg__pb2.BasicReply.FromString,
        )
    self.checkout = channel.unary_unary(
        '/Orpheus/checkout',
        request_serializer=msg__pb2.CheckoutRequest.SerializeToString,
        response_deserializer=msg__pb2.BasicReply.FromString,
        )
    self.commit = channel.unary_unary(
        '/Orpheus/commit',
        request_serializer=msg__pb2.CommitRequest.SerializeToString,
        response_deserializer=msg__pb2.BasicReply.FromString,
        )
    self.run = channel.unary_unary(
        '/Orpheus/run',
        request_serializer=msg__pb2.RunRequest.SerializeToString,
        response_deserializer=msg__pb2.RunReply.FromString,
        )
    self.create_user = channel.unary_unary(
        '/Orpheus/create_user',
        request_serializer=msg__pb2.CreateUserRequest.SerializeToString,
        response_deserializer=msg__pb2.BasicReply.FromString,
        )


class OrpheusServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def init(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def list(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def drop(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def checkout(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def commit(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def run(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def create_user(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_OrpheusServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'init': grpc.unary_unary_rpc_method_handler(
          servicer.init,
          request_deserializer=msg__pb2.InitRequest.FromString,
          response_serializer=msg__pb2.BasicReply.SerializeToString,
      ),
      'list': grpc.unary_unary_rpc_method_handler(
          servicer.list,
          request_deserializer=msg__pb2.Empty.FromString,
          response_serializer=msg__pb2.BasicReply.SerializeToString,
      ),
      'drop': grpc.unary_unary_rpc_method_handler(
          servicer.drop,
          request_deserializer=msg__pb2.DropRequest.FromString,
          response_serializer=msg__pb2.BasicReply.SerializeToString,
      ),
      'checkout': grpc.unary_unary_rpc_method_handler(
          servicer.checkout,
          request_deserializer=msg__pb2.CheckoutRequest.FromString,
          response_serializer=msg__pb2.BasicReply.SerializeToString,
      ),
      'commit': grpc.unary_unary_rpc_method_handler(
          servicer.commit,
          request_deserializer=msg__pb2.CommitRequest.FromString,
          response_serializer=msg__pb2.BasicReply.SerializeToString,
      ),
      'run': grpc.unary_unary_rpc_method_handler(
          servicer.run,
          request_deserializer=msg__pb2.RunRequest.FromString,
          response_serializer=msg__pb2.RunReply.SerializeToString,
      ),
      'create_user': grpc.unary_unary_rpc_method_handler(
          servicer.create_user,
          request_deserializer=msg__pb2.CreateUserRequest.FromString,
          response_serializer=msg__pb2.BasicReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Orpheus', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
